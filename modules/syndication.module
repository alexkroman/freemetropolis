<?php

function syndication_link($type) {
  if ($type == 'system' && user_access('access content')) {
    $links[] = menu('syndication', t('syndication'), 'syndication_page', 6);
  }
  return $links ? $links : array();
}

function syndication_block($op = "list", $delta = 0) {
  if($op == "list") {
    $blocks[0]["info"] = "Syndicate (more)";
    return $blocks;
  }
  else {
    if (user_access("access content")) {
      $block["subject"] = t("Syndicate");
      $block["content"] = "<div align=\"center\">". l("<img src=\"". theme("image", "xml.gif") ."\" width=\"36\" height=\"14\" border=\"0\" alt=\"XML\" />", "node/feed", array("title" => t("Read the XML version of this page.")));
      $block["content"] .= "<br /><small>". l(t("more"), "syndication", array ("title" => t("Review all XML feeds exported by %sn", array ("%sn" => variable_get("site_name", "Drupal"))))). "</small></div>\n";
      return $block;
    }
  }
}

function syndication_page () {
  $edit = $_POST["edit"];
  $blogs = syndication_blogs($edit);  
  
  if (user_access("access content")) {
    if (function_exists("blog_feed_user")) {
      $output .= theme("box", t("Syndicate: Blogs"), $blogs);
    }
    if (module_exist("aggregator")) {
      $output .= theme("box", t("Syndicate: Directory"), syndication_opml());
    }
    // modules may add their own syndication boxes
    $result = array();
    foreach (module_list() as $name) {
      $result = module_invoke($name, "syndication", $edit);
      if (isset($result)) {
        foreach ($result as $box) {
          $output .= theme("box", t("Syndicate: %s", array ("%s" => $box["subject"])), $box["content"]);
        }  
      }
    }
  }  
  print theme("page", $output);
}

function syndication_blogs($edit) {

  if ($edit) {
    $i = 1;
    $result = db_query("SELECT uid, name FROM users WHERE name LIKE '%". check_query($edit["name"]). "%' ORDER BY timestamp DESC");
    if (db_num_rows($result)) {
      while ($account = db_fetch_object($result)) {
        $link[] = l(t("%s's RSS feed", array ("%s" => $account->name)), "blog/feed/$account->uid");
        $link[] = l(t("%s's blog", array ("%s" => $account->name)), "blog/$account->uid");
        $link[] = l(t("%s's profile", array ("%s" => $account->name)), "user/view/$account->uid");    
      }
      $row[] = "$i. ". theme("links", $link);
      $i++;
    $output = form_item(t("Search Results"), implode($row, "<br />")). "<br />";
    }
    else {
      $output = theme("error", t("Username not found."));
    }
  }  
  $all = l(t("all users"), "blog/feed");  
  $output .= "<p>". t("At <i>%sn</i>, %all and each user, have an RSS feed for their blog.", array ("%sn" => variable_get("site_name", "Drupal"), "%all" => $all)). "</p>";
  $result = db_query_range("SELECT DISTINCT(u.uid), u.name FROM users u INNER JOIN node n ON u.uid = n.uid WHERE n.type = 'blog' AND n.status = 1", 0, 16);
  while ($account = db_fetch_object($result)) {
    $url = "blog/feed/$account->uid";
    $authors[] = l(t("%s's feed", array ("%s" => $account->name)), $url);
  }
  $output .= $authors ? form_item(t("Recent Blog Authors"), implode($authors, ", ")) : "";
  
  $output .= form_textfield("Search users", "name", $edit["name"], 25, 60, t("Enter a username to view her blog feed, and other details."));
  $output .= form_submit(t("Search"));
  $output = form($output);
  return $output;
}

function syndication_opml() {
  $url = l(t("this OPML file"), "aggregator\opml");  
  $output = t("In addition to displaying RSS feeds, <i>%sn</i> offers %link which lists all RSS feeds that are collected here.", array ("%sn" => variable_get("site_name", "Drupal"), "%link" => $url));
  return $output;
}

function syndication_admin() {
  // nothing yet
}  

function syndication_help($section) {
  $output ="";

  switch ($section) {
    case 'admin/help#syndication':
      $output = syndication_help_intro();
      $output .= syndication_help_api();
      break;
    case 'admin/system/modules#description':
      $output .= t("Adds a Syndication block, links to more feeds");
      break;
    case 'admin/system/modules/syndication':
      $output = syndication_help_intro();
      break;
  }

  return $output;
}

function syndication_help_intro() {
  $output = "
<p>Syndication.module offers a web page which centralizes all of the RSS feeds 
generated by Drupal. This helps users find interesting feeds from your web site.</p>

<p>Currently, the syndication page helps visitors find the following feeds.
<ul>
<li>the blog feed of any user or all users
<li>node feeds for any taxonomy terms, including composites of terms (requires <i>taxonomy_dhtml.module</i>)
<li>a directory of all feeds being consumed by the <i>import.module</i>
</ul>
</p>

<h3>For Module Developers - Syndication hook</h3>";
  return $output;
}

function syndication_help_api() {

  $output = '

    Any module can export boxes to the syndication page. You do so
    by creating a <i>modulename</i>_syndication function which returns
    an associative array of boxes, much like the block module. Each box
    in the array requires <i>subject</i> and <i>content</i> fields. Example: 
    <pre>
    function mymodule_syndication() {
    
      // Creating the first box
    
      $box[0]["subject"] = "Existentialism";
      $box[0]["content"] = "So many feeds in this world";
    
      // Lets create a one box more
    
      $box[1]["subject"] = "Got any question?";
      $box[1]["content"] = "Who, Where, Why, When";
      return  $block; 
    }
    </pre>';
  return $output;
}
  
?>
